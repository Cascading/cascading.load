/*
 * Copyright (c) 2007-2014 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'eu.appsatori:gradle-fatjar-plugin:0.2'
  }
}

apply plugin: 'fatjar'

dependencies {

  compile project( ':load-common' )

  compile group: 'cascading', name: 'cascading-hadoop2-tez', version: cascadingVersion

  provided group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoop2Version
  provided group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2Version
  provided group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: hadoop2Version
  provided group: 'org.apache.tez', name: 'tez-api', version: tezVersion
  provided group: 'org.apache.tez', name: 'tez-dag', version: tezVersion
  provided group: 'org.apache.tez', name: 'tez-yarn-timeline-history-with-acls', version: tezVersion 
  provided group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'


  testCompile project( path: ':load-platform', configuration: 'testArtifacts' )
  testCompile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoop2Version
  testCompile group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2Version
  testCompile group: 'cascading', name: 'cascading-core', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-hadoop2-tez', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-platform', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'org.apache.tez', name: 'tez-tests', version: tezVersion, classifier: 'tests'
}

fatJar {
  archiveName = jarName
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/LICENSE*'
  manifest {
    attributes "Main-Class": "cascading/load/Main",
            'Build-Time': "${buildTimestamp}"
  }
}

artifacts {
  archives fatJar
}

test {
  setTestClassesDir( file( "${projectDir}/../load-platform/src/test/java/" ) )
  sourceSets.test.output.classesDir = file( "${projectDir}/../load-platform/build/classes/test" )
}

configurations.all {
  resolutionStrategy {
    force 'com.google.guava:guava:11.0.2'

    eachDependency { def details ->
      if( details.requested.group == 'org.apache.hadoop' )
        details.useVersion hadoop2Version
    }
  }
}
