/*
 * Copyright (c) 2007-2013 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  repositories {
      mavenCentral()
  }

  dependencies {
      classpath 'eu.appsatori:gradle-fatjar-plugin:0.2'
  }
}

apply plugin: 'fatjar'

dependencies {

  compile group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion
  compile group: 'cascading', name: 'cascading-local', version: cascadingVersion
  compile( group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.3' )
  compile( group: 'log4j', name: 'log4j', version: '1.2.16' )

  provided( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2Version )
  provided( group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoop2Version )
  provided group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'

  testCompile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoop2Version 
  testCompile group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2Version 
  testCompile group: 'cascading', name: 'cascading-core', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-platform', version: cascadingVersion, classifier: 'tests', changing: true

}

/*sourceSets {
  main {
    java {
      srcDirs += project(":load-hadoop").sourceSets.main.java
    }
    resources {
      srcDirs += project(":load-hadoop").sourceSets.main.resources
    }
  }
  test{
    java{
      srcDirs += project(":load-hadoop").sourceSets.test.java
    }
  }
}*/

fatJar {
  archiveName  = jarName
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/LICENSE*'
  manifest {
    attributes "Main-Class": "cascading/load/Main",
            'Build-Time': "${buildTimestamp}"
  }
}

artifacts {
  archives fatJar
}
